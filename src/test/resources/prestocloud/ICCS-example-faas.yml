tosca_definitions_version: tosca_prestocloud_mapping_1_2

metadata:
   template_name: ICCS generated types definition
   template_author: ICCS
   template_version: 1.0.0-SNAPSHOT
   CostThreshold: 1000.0
   TimePeriod:  720
   ProviderName_0: Google_Cloud_Compute
   ProviderRequired_0: false
   ProviderExcluded_0: true
   MaxInstances: 100
   MetricToMinimize: Cost

description: Types Description

imports:
   - tosca-normative-types:1.2
   - iccs-normative-types:1.0
   - resource-descriptions:1.0
   - placement-constraints:1.0

node_types:

   # Requirements for a cloud based proxy
   proxying_fragments_type:
      description: Hosting requirements of a proxy
      derived_from: prestocloud.nodes.proxy.faas
      requirements:
         - host:
            capability: tosca.capabilities.Container
            node: prestocloud.nodes.compute
            relationship: tosca.relationships.HostedOn
            node_filter:
               capabilities:
                  - host:
                     properties:
                        - num_cpus: { in_range: [ 1, 2 ] }
                        - mem_size: { in_range: [ 2 GB, 4 GB ] }
                        - disk_size: { in_range: [ 20 GB, 40 GB ] }
                  - resource:
                     properties:
                        - type: { equal: cloud }

   # Audio captor node selection
   processing_node_fragments_AudioCaptor:
      description: A TOSCA description of a node
      derived_from: prestocloud.nodes.agent.faas
      requirements:
         - host:
            capability: tosca.capabilities.Container
            node: prestocloud.nodes.compute
            relationship: tosca.relationships.HostedOn
            node_filter:
               capabilities:
                  - host:
                     properties:
                        - mem_size: { in_range: [ 200 MB, 4 GB ] }
                        - disk_size: { in_range: [ 20 GB, 40 GB ] }
                  - os:
                     properties:
                        - architecture: { valid_values: [ arm64, armel, armhf ] }
                        - type: { equal: linux }
                        - distribution: { equal: ubuntu }
                  - resource:
                     properties:
                        - type: { valid_values: [ edge ] }
                  - sensors:
                     properties:
                        - microphone: { equal: true }

   # Face detector node selection
   processing_node_fragments_FaceDetector:
      description: A TOSCA description of a node
      derived_from: prestocloud.nodes.agent.faas
      requirements:
         - host:
            capability: tosca.capabilities.Container
            node: prestocloud.nodes.compute
            relationship: tosca.relationships.HostedOn
            node_filter:
               capabilities:
                  - host:
                     properties:
                        - num_cpus: { in_range: [ 2, 4 ] }
                        - mem_size: { in_range: [ 4 GB, 8 GB ] }
                        - disk_size: { in_range: [ 40 GB, 100GB ] }
                  - os:
                     properties:
                        - architecture: { valid_values: [ x86_64, i386 ] }
                        - type: { equal: linux }
                        - distribution: { equal: ubuntu }
                  - resource:
                     properties:
                        - type: { equal: cloud }
                  - sensors:
                     properties:
                        - camera: { equal: true }

   # Requirements for a load balancer
   load_balancing_VideoTranscoder_type:
      description: Hosting requirements for the video transcoder's load balancer
      derived_from: prestocloud.nodes.proxy.faas
      requirements:
         - host:
            capability: tosca.capabilities.Container
            node: prestocloud.nodes.compute
            relationship: tosca.relationships.HostedOn
            node_filter:
               capabilities:
                  - host:
                     properties:
                        - num_cpus: { in_range: [ 1, 2 ] }
                        - mem_size: { in_range: [ 2 GB, 4 GB ] }
                        - disk_size: { in_range: [ 20 GB, 40 GB ] }
                  - resource:
                     properties:
                        - type: { equal: cloud }

   # Video transcoder node selection
   processing_node_fragments_VideoTranscoder:
      description: A TOSCA description of a node
      derived_from: prestocloud.nodes.agent.faas
      requirements:
         - host:
            capability: tosca.capabilities.Container
            node: prestocloud.nodes.compute
            relationship: tosca.relationships.HostedOn
            node_filter:
               capabilities:
                  - host:
                     properties:
                        - num_cpus: { in_range: [ 2, 4 ] }
                        - mem_size: { in_range: [ 4 GB, 8 GB ] }
                        - disk_size: { in_range: [ 40 GB, 100 GB ] }
                  - os:
                     properties:
                        - architecture: { valid_values: [ x86_64, i386 ] }
                        - type: { equal: linux }
                        - distribution: { equal: ubuntu }
                  - resource:
                     properties:
                        - type: { equal: cloud }
                  - sensors:
                     properties:
                        - camera: { equal: true }


   # Requirements for Multimedia manager's proxy AND load balancer
   proxying_MultimediaManager_type:
      description: Hosting requirements for the multimedia manager's load balancer
      derived_from: prestocloud.nodes.proxy.faas
      requirements:
         - host:
            capability: tosca.capabilities.Container
            node: prestocloud.nodes.compute
            relationship: tosca.relationships.HostedOn
            node_filter:
               capabilities:
                  - host:
                     properties:
                        - num_cpus: { in_range: [ 1, 2 ] }
                        - mem_size: { in_range: [ 2 GB, 4 GB ] }
                        - disk_size: { in_range: [ 20 GB, 40 GB ] }
                  - resource:
                     properties:
                        - type: { equal: cloud }

   # Multimedia manager node selection on Edge
   processing_edge_node_fragments_MultimediaManager:
      description: A TOSCA description of a node
      derived_from: prestocloud.nodes.agent.faas
      requirements:
         - host:
            capability: tosca.capabilities.Container
            node: prestocloud.nodes.compute
            relationship: tosca.relationships.HostedOn
            node_filter:
               capabilities:
                  - host:
                     properties:
                        - num_cpus: { in_range: [ 1, 8 ] }
                        - mem_size: { in_range: [ 1 GB, 4 GB ] }
                        - disk_size: { in_range: [ 16 GB, 512 GB ] }
                  - os:
                     properties:
                        - architecture: { valid_values: [ arm64, armel, armhf ] }
                        - type: { equal: linux }
                  - resource:
                     properties:
                        - type: { equal: edge }

   # Multimedia manager node selection on Cloud
   processing_cloud_node_fragments_MultimediaManager:
      description: A TOSCA description of a node
      derived_from: prestocloud.nodes.agent.faas
      requirements:
         - host:
            capability: tosca.capabilities.Container
            node: prestocloud.nodes.compute
            relationship: tosca.relationships.HostedOn
            node_filter:
               capabilities:
                  - host:
                     properties:
                        - num_cpus: { in_range: [ 2, 4 ] }
                        - mem_size: { in_range: [ 4 GB, 8 GB ] }
                        - disk_size: { in_range: [ 100 GB, 500 GB ] }
                  - os:
                     properties:
                        - architecture: { valid_values: [ x86_64, i386 ] }
                        - type: { equal: linux }
                        - distribution: { equal: ubuntu }
                  - resource:
                     properties:
                        - type: { equal: cloud }

topology_template:

   inputs:
      ssh_pub_key1:
         type: string
         description: <
            An SSH public key specified as input. If empty, the orchestrator must be able to retrieve it itself from its name.
      ssh_priv_key1:
         type: string
         description: <
            Reference an SSH private key. It may be pass as input only if the type level TOSCA remains private.
            The orchestrator must be able to retrieve it from its name (usually stored in a keyvault).

   node_templates:

      # Proxy used by both audio captor and face detector (fragments with 1 occurrence)
      proxying_fragments:
         type: proxying_fragments_type

      # Audio captor
      deployment_node_fragments_AudioCaptor:
         type: processing_node_fragments_AudioCaptor
         properties:
            ssh_pub_key: { get_input: ssh_pub_key1 }

      fragments_AudioCaptor:
         type: prestocloud.nodes.fragment.faas
         properties:
            id: 0
            name: fragments.AudioCaptor
            onloadable: true
            occurrences: 1
            docker:
              image: "lambda_proxy_app/main_app:1.2.2"
              registry: "nexus:39580"
              variables:
                SERVER_PORT: "9980"
                SUM_URL: "@GwdMGW4gbn"
                MULTIPLICATION_PORT: "9910"
                DIVISION_PORT: "9930"
                DIVISION_IPV6ENABLED: "false"
                MULTIPLICATION_URL: "@GwdMGW4gbn"
                DIVISION_URL: "@GwdMGW4gbn"
                SUM_PORT: "9920"
              ports:
                - target: 9980
                  published: 9980
                  protocol: TCP
         requirements:
            - execute: deployment_node_fragments_AudioCaptor
            - proxy: proxying_fragments

      # Face detector
      deployment_node_fragments_FaceDetector:
         type: processing_node_fragments_FaceDetector

      fragments_FaceDetector:
         type: prestocloud.nodes.fragment.faas
         properties:
            id: 1
            name: fragments.FaceDetector
            onloadable: false
            occurrences: 1
            health_check:
              interval: 60
              cmd: "cat /proc/meminfo"
         requirements:
            - execute: deployment_node_fragments_FaceDetector
            - proxy: proxying_fragments

      # Video transcoder
      load_balancing_VideoTranscoder:
         type: load_balancing_VideoTranscoder_type

      deployment_node_fragments_VideoTranscoder:
         type: processing_node_fragments_VideoTranscoder

      fragments_VideoTranscoder:
         type: prestocloud.nodes.fragment.faas
         properties:
            id: 3
            name: fragments.VideoTranscoder
            onloadable: false
            occurrences: 2
         requirements:
            - execute: deployment_node_fragments_VideoTranscoder
            - proxy: load_balancing_VideoTranscoder

      # Multimedia manager
      proxying_MultimediaManager:
         type: proxying_MultimediaManager_type

      deployment_cloud_node_fragments_MultimediaManager:
         type: processing_cloud_node_fragments_MultimediaManager

      deployment_edge_node_fragments_MultimediaManager:
         type: processing_edge_node_fragments_MultimediaManager

      fragments_MultimediaManager:
         type: prestocloud.nodes.fragment.faas
         properties:
            id: 2
            name: fragments.MultimediaManager
            onloadable: false
            occurrences: 4
         requirements:
            - execute: deployment_cloud_node_fragments_MultimediaManager
            - execute: deployment_edge_node_fragments_MultimediaManager
            - proxy: proxying_MultimediaManager
